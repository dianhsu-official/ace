name: Rust

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-macos:
    runs-on: macos-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: ${{ matrix.target }}
        toolchain: nightly
        default: true
        override: true

    - name: Build ${{ matrix.target }}
      timeout-minutes: 120
      shell: bash
      run: cargo build --target ${{ matrix.target }} 

    - name: Test ${{ matrix.target }}
      timeout-minutes: 120
      shell: bash
      run: cargo test --target ${{ matrix.target }} 
  build-windows:
    runs-on: windows-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - aarch64-pc-windows-msvc
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: ${{ matrix.target }}
        toolchain: nightly
        default: true
        override: true

    - name: Build ${{ matrix.target }}
      timeout-minutes: 120
      shell: bash
      run: cargo build --target ${{ matrix.target }} 

    - name: Test ${{ matrix.target }}
      timeout-minutes: 120
      shell: bash
      run: cargo test --target ${{ matrix.target }} 
  

  build-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: ${{ matrix.target }}
        toolchain: nightly
        default: true
        override: true

    - name: Build ${{ matrix.target }}
      timeout-minutes: 120
      shell: bash
      run: cargo build --target ${{ matrix.target }}

    - name: Test ${{ matrix.target }}
      timeout-minutes: 120
      shell: bash
      run: cargo test --target ${{ matrix.target }}
  